# Configuração dos Providers de IA para o Chat
# Modelos especificados:
# - Google: Gemini 1.5 e 2.0 Flash
# - OpenAI: GPT-4o-mini e GPT-5 Chat Latest  
# - Perplexity: Sonar (para busca na web)

# ===========================================
# GOOGLE GEMINI CONFIGURATION
# ===========================================
# Use uma das seguintes variáveis (em ordem de prioridade):
GOOGLE_GENERATIVE_AI_API_KEY="your-google-generative-ai-api-key"
# GOOGLE_GEMINI_API_KEY="your-gemini-api-key"
# GOOGLE_API_KEY="your-google-api-key"

# Modelos disponíveis:
# - gemini-1.5-flash (rápido)
# - gemini-2.0-flash-exp (experimental, mais avançado)

# ===========================================
# OPENAI CONFIGURATION
# ===========================================
OPENAI_API_KEY="your-openai-api-key"

# Modelos disponíveis:
# - gpt-4o-mini (padrão para tarefas simples)
# - gpt-5-chat-latest (para tarefas complexas)

# ===========================================
# PERPLEXITY CONFIGURATION
# ===========================================
PERPLEXITY_API_KEY="your-perplexity-api-key"

# Modelo disponível:
# - sonar (para busca na web)

# ===========================================
# CONFIGURAÇÕES AVANÇADAS
# ===========================================

# Timeout para cada provider (em milissegundos)
GOOGLE_TIMEOUT=45000
OPENAI_TIMEOUT=30000
PERPLEXITY_TIMEOUT=45000

# Número máximo de tentativas por provider
GOOGLE_MAX_RETRIES=3
OPENAI_MAX_RETRIES=3
PERPLEXITY_MAX_RETRIES=2

# ===========================================
# ESTRATÉGIA DE SELEÇÃO DE PROVIDERS
# ===========================================

# Ordem de prioridade por complexidade:
# SIMPLE: Google → OpenAI → Perplexity
# COMPLEX: OpenAI → Google → Perplexity  
# FAST: Google → Perplexity → OpenAI

# Módulos com providers preferidos:
# - enem: OpenAI (GPT-4o-mini/GPT-5)
# - professor: Google (Gemini 1.5/2.0)
# - aula_interativa: Google (Gemini 1.5/2.0)
# - financeiro: OpenAI (GPT-4o-mini/GPT-5)
# - social_media: Perplexity (Sonar)
# - atendimento: OpenAI (GPT-4o-mini/GPT-5)

# ===========================================
# DETECÇÃO AUTOMÁTICA DE BUSCA NA WEB
# ===========================================
# O sistema detecta automaticamente quando usar Perplexity
# baseado em palavras-chave como:
# - "pesquisar", "buscar", "notícias", "atual", "recente"

# ===========================================
# LOGS E MONITORAMENTO
# ===========================================
# O sistema registra automaticamente:
# - Provider selecionado
# - Modelo usado
# - Complexidade da mensagem
# - Tempo de resposta
# - Uso de tokens
# - Se foi usada busca na web

# ===========================================
# EXEMPLO DE USO
# ===========================================
# 1. Configure pelo menos uma das chaves de API acima
# 2. O sistema selecionará automaticamente o melhor provider
# 3. Para busca na web, use palavras como "pesquisar sobre..."
# 4. Para tarefas complexas, o sistema usará modelos mais avançados
# 5. Fallback automático entre providers se um falhar
