'use client';

import { useState, useEffect, useCallback, useMemo, lazy, Suspense } from 'react';
import { 
  Users, Clock, DollarSign, Star, ArrowRight, Play, CheckCircle, MessageSquare, 
  Bot, Zap, Rocket, Shield, Heart, Phone, Mail, MapPin, Target, TrendingUp, 
  BookOpen, Lightbulb, LogIn, ChevronDown, Brain, Award, Globe, BookOpenIcon, 
  GraduationCap, Trophy, Users2, BarChart3, Settings, Calendar, FileText, 
  MessageCircle, Search, Filter, Download, Share2 
} from 'lucide-react';
import Image from 'next/image';
import { motion } from 'framer-motion';
import { debounce } from 'lodash';

// Lazy load modals
const PrivacyPolicyModal = lazy(() => import('../components/modals/PrivacyPolicyModal'));
const TermsOfUseModal = lazy(() => import('../components/modals/TermsOfUseModal'));
const LGPDModal = lazy(() => import('../components/modals/LGPDModal'));

// Constants and data configuration
const BRAND = {
  name: "HubEdu.ia",
  tagline: "A Educação do Futuro",
  description: "A plataforma mais completa para escolas brasileiras com IA, simulador ENEM, aulas interativas e chat inteligente."
};

const CHAT_MODULES = [
  { name: "Professor IA", description: "Dúvidas rápidas", icon: "👩‍🏫" },
  { name: "Suporte T.I.", description: "Funcionários", icon: "💻" },
  { name: "Atendimento", description: "Pais & Visitantes", icon: "👨‍👩‍👧‍👦" },
  { name: "Bem-estar", description: "Comunidade", icon: "💚" },
  { name: "Social Media", description: "Administração", icon: "📱" },
  { name: "Coordenação", description: "Gestão escolar", icon: "👨‍💼" },
  { name: "Secretaria", description: "Documentação", icon: "📋" },
  { name: "RH", description: "Recursos humanos", icon: "👥" },
  { name: "Financeiro", description: "Contas & Pagamentos", icon: "💰" },
  { name: "Gestão", description: "Relatórios & Analytics", icon: "📊" }
];

const COMPETITORS = [
  {
    name: "ChatGPT",
    price: "US$ 30/mês",
    restrictions: [
      "Indisponível para menores de 18 anos",
      "Sem conteúdo específico para escolas", 
      "Não baseado na BNCC",
      "Sem compliance LGPD"
    ],
    icon: "🤖"
  },
  {
    name: "Grok", 
    price: "US$ 30/mês",
    restrictions: [
      "Indisponível para menores de 18 anos",
      "Sem simulador ENEM",
      "Não baseado na BNCC", 
      "Sem compliance LGPD"
    ],
    icon: "⚡"
  }
];

const ADVANTAGES = [
  "✅ Disponível para todas as idades (incluindo menores)",
  "✅ Conteúdo específico para escolas brasileiras", 
  "✅ Baseado na BNCC (Base Nacional Comum Curricular)",
  "✅ Compliance total com LGPD",
  "✅ Chats efêmeros para máxima privacidade",
  "✅ Simulador ENEM com +3000 questões oficiais",
  "✅ Suporte nacional especializado"
];

// Interfaces for type safety
interface Feature {
  title: string;
  description: string;
  icon: string;
  stats?: string;
  features?: string[];
  cta?: string;
}

interface Section {
  title: string;
  description: string;
  features: Feature[];
}

interface Testimonial {
  name: string;
  role: string;
  content: string;
  rating: number;
}

interface FAQItem {
  question: string;
  answer: string;
}

interface Content {
  hero: Section & { ctaPrimary: string; ctaSecondary: string; modules: Feature[] };
  lessonsSection: Section;
  schoolsSection: Section;
  enemSection: Section;
  testimonials: Testimonial[];
  faqItems: FAQItem[];
  finalCta: { title: string; subtitle: string; features: string[]; ctaPrimary: string; ctaSecondary: string };
  pricingComparison: {
    title: string;
    subtitle: string;
    competitors: { name: string; price: string; restrictions: string[]; icon: string }[];
    advantages: string[];
  };
  contactInfo: { name: string; website: string; email: string; phone: string; location: string; links: string[] };
}

// Content data
const content: Content = {
  hero: {
    title: 'HubEdu.ia - A Educação do Futuro',
    description: 'A plataforma mais completa para escolas brasileiras com IA, simulador ENEM, aulas interativas e chat inteligente.',
    ctaPrimary: 'Em Breve',
    ctaSecondary: 'Ver Demonstração',
    modules: [
      {
        title: 'Aulas Interativas',
        description: 'Slides dinâmicos com imagens, quizzes e gamificação.',
        icon: '🎮',
        features: ['14 slides estruturados', 'Atividades dinâmicas', 'Quizzes interativos', 'Gamificação completa'],
        cta: 'Explorar Aula',
      },
      {
        title: 'Simulador ENEM',
        description: 'Mais de 3000 questões oficiais + infinitas geradas por IA.',
        icon: '📚',
        features: ['3000+ questões oficiais', 'Questões infinitas por IA', 'Modos personalizados', 'Análise detalhada'],
        cta: 'Fazer Simulado',
      },
      {
        title: 'Redação ENEM',
        description: 'Correção automática com temas oficiais e tendências atuais.',
        icon: '✍️',
        features: ['Correção automática', 'Temas oficiais ENEM', 'Tendências 2025', 'Feedback detalhado'],
        cta: 'Testar Redação',
      },
      {
        title: 'Chat Inteligente - 10 Módulos',
        description: 'Sistema completo de IA com módulos customizados, chats efêmeros e compliance total com LGPD.',
        icon: '💬',
        features: [
          'Professor IA',
          'Suporte T.I.',
          'Atendimento Pais',
          'Bem-estar',
          'Social Media',
          'Coordenação',
          'Secretaria',
          'RH',
          'Financeiro',
          'Gestão',
        ],
        cta: 'Explorar Módulos',
      },
    ],
    features: [],
  },
  lessonsSection: {
    title: 'Aulas Geradas por IA',
    description: 'Aulas completas baseadas na BNCC, transformando qualquer conteúdo em experiências educacionais envolventes.',
    features: [
      {
        title: 'Baseadas na BNCC',
        description: 'Todas as aulas seguem rigorosamente a Base Nacional Comum Curricular brasileira.',
        icon: '📚',
      },
      {
        title: 'Interatividade Total',
        description: 'Quizzes com feedback instantâneo, atividades colaborativas e gamificação.',
        icon: '🎮',
      },
      {
        title: 'Duração Otimizada',
        description: 'Aulas de 45-55 minutos (síncronas) e 30-40 minutos (assíncronas) perfeitamente cronometradas.',
        icon: '⏱️',
      },
      {
        title: 'Qualquer Tema',
        description: 'Educação, negócios, tecnologia, saúde, arte - qualquer assunto, qualquer nível de conhecimento.',
        icon: '🌍',
      },
    ],
  },
  schoolsSection: {
    title: 'Soluções para Escolas Brasileiras',
    description: 'Plataforma completa desenvolvida especificamente para atender as necessidades das instituições de ensino brasileiras.',
    features: [
      {
        title: 'Personalização de Conteúdo',
        description: 'Adaptação completa do conteúdo educacional para o currículo e metodologia da sua escola.',
        icon: '📚',
        stats: 'Conteúdo Customizado',
      },
      {
        title: 'Ferramentas de IA para Todos',
        description: 'Professores, coordenadores, gestores, alunos e pais têm acesso a ferramentas específicas de IA.',
        icon: '🤖',
        stats: '5 Perfis de Usuário',
      },
      {
        title: 'Relatórios em Tempo Real',
        description: 'Acompanhamento instantâneo do desempenho de alunos, turmas e professores.',
        icon: '📊',
        stats: 'Monitoramento 24/7',
      },
    ],
  },
  enemSection: {
    title: 'Preparação Completa para o ENEM',
    description: 'A plataforma mais completa para estudantes brasileiros se prepararem para o Exame Nacional do Ensino Médio.',
    features: [
      {
        title: 'Banco de Questões Gigante',
        description: 'Mais de 3000 questões oficiais (2009-2024) + infinitas geradas por IA.',
        icon: '📚',
        stats: '3000+ Questões Oficiais',
      },
      {
        title: 'Modos de Estudo Inteligentes',
        description: 'Modo rápido para revisão, personalizado por dificuldade e oficial completo com cronômetro.',
        icon: '⚡',
        stats: '3 Modos Disponíveis',
      },
      {
        title: 'Correção Automática de Redação',
        description: 'IA especializada corrige sua redação seguindo critérios oficiais do ENEM.',
        icon: '✍️',
        stats: 'Correção Instantânea',
      },
      {
        title: 'Temas e Tendências 2025',
        description: 'Acesso a todos os temas oficiais de redação + análise de tendências para o próximo ENEM.',
        icon: '🎯',
        stats: 'Tendências Atualizadas',
      },
    ],
  },
  testimonials: [
    {
      name: 'Maria Santos',
      role: 'Professora, Escola Nova Era',
      content: 'As aulas de 45 minutos são incríveis! Os alunos adoram os quizzes e rankings. A correção automática de redação economiza horas de trabalho.',
      rating: 5,
    },
    {
      name: 'Carlos Mendes',
      role: 'Coordenador, Instituto Esperança',
      content: 'O simulador ENEM com +3000 questões aumentou o desempenho dos alunos em 45%. Os pais adoram o chat omni-channel.',
      rating: 5,
    },
    {
      name: 'Ana Silva',
      role: 'Diretora, Colégio Crescer',
      content: 'A gestão escolar ficou mais fácil com as ferramentas de IA. Chat inteligente para toda comunidade escolar é revolucionário.',
      rating: 5,
    },
  ],
  faqItems: [
    {
      question: 'Como são criadas as aulas?',
      answer: 'IA gera aulas de 45-55 minutos (síncronas) ou 30-40 minutos (assíncronas) baseadas na BNCC com slides, atividades e quizzes sobre qualquer tema.',
    },
    {
      question: 'As aulas seguem a BNCC?',
      answer: 'Sim, todas as aulas são criadas seguindo rigorosamente a Base Nacional Comum Curricular brasileira.',
    },
    {
      question: 'Quantos módulos tem o chat inteligente?',
      answer: '10 módulos customizados: Professor IA, Suporte T.I., Atendimento Pais, Bem-estar, Social Media, Coordenação, Secretaria, RH, Financeiro e Gestão.',
    },
    {
      question: 'O simulador ENEM tem quantas questões?',
      answer: 'Mais de 3000 questões oficiais (2009-2024) + infinitas geradas por IA.',
    },
    {
      question: 'Como funciona a correção de redação?',
      answer: 'Correção automática com temas oficiais ENEM e análise de tendências 2025.',
    },
    {
      question: 'O chat é seguro para alunos?',
      answer: 'Sim, módulos seguros por faixa etária e função escolar (alunos, professores, coordenação, pais).',
    },
    {
      question: 'Os pais têm acesso?',
      answer: 'Sim, chat omni-channel para dúvidas com a escola via WhatsApp, site e redes sociais.',
    },
    {
      question: 'É compatível com LGPD?',
      answer: 'Sim, compliance total com LGPD. Chats são efêmeros e dados protegidos com servidores brasileiros.',
    },
    {
      question: 'Menores de 18 anos podem usar?',
      answer: 'Sim, diferentemente do ChatGPT e Grok, nossa plataforma é oficialmente acessível para todas as idades.',
    },
    {
      question: 'Quando estará disponível?',
      answer: 'Em breve, com suporte completo para escolas brasileiras.',
    },
  ],
  finalCta: {
    title: 'A Educação do Futuro Chega Em Breve',
    subtitle: 'Prepare sua escola para uma nova era.',
    features: [
      'Aulas Interativas - 45-55 min (síncronas) e 30-40 min (assíncronas) geradas por IA.',
      'Simulador ENEM - +3000 questões oficiais + infinitas por IA.',
      'Redação ENEM - Correção automática com temas oficiais.',
      'Chat Inteligente - 10 módulos customizados para toda escola.',
      'Suporte nacional e configuração rápida.',
    ],
    ctaPrimary: 'Em Breve',
    ctaSecondary: 'Agendar Demonstração',
  },
  pricingComparison: {
    title: 'Por que Escolher HubEdu.ia?',
    subtitle: 'Comparativo com as principais plataformas de IA',
    competitors: [
      {
        name: 'ChatGPT',
        price: 'US$ 30/mês',
        restrictions: ['Indisponível para menores de 18 anos', 'Sem conteúdo específico para escolas', 'Não baseado na BNCC', 'Sem compliance LGPD'],
        icon: '🤖',
      },
      {
        name: 'Grok',
        price: 'US$ 30/mês',
        restrictions: ['Indisponível para menores de 18 anos', 'Sem simulador ENEM', 'Não baseado na BNCC', 'Sem compliance LGPD'],
        icon: '⚡',
      },
    ],
    advantages: [
      '✅ Disponível para todas as idades (incluindo menores)',
      '✅ Conteúdo específico para escolas brasileiras',
      '✅ Baseado na BNCC (Base Nacional Comum Curricular)',
      '✅ Compliance total com LGPD',
      '✅ Chats efêmeros para máxima privacidade',
      '✅ Simulador ENEM com +3000 questões oficiais',
      '✅ Suporte nacional especializado',
    ],
  },
  contactInfo: {
    name: 'HubEdu.ia - Educação com IA',
    website: 'HubEdu.ia.br',
    email: 'contato@hubedu.ia',
    phone: '(11) 9999-9999',
    location: 'São Paulo, SP',
    links: ['Demonstração', 'Suporte', 'Privacidade', 'Termos'],
  },
};

// Reusable Components
interface OptimizedImageProps {
  src: string;
  alt: string;
  className?: string;
  width?: number;
  height?: number;
}

const OptimizedImage: React.FC<OptimizedImageProps> = ({ src, alt, className, width = 200, height = 200 }) => (
  <Image src={src} alt={alt} className={className} width={width} height={height} loading="lazy" />
);

// Additional reusable components from previous version
const SectionTitle = ({ children, subtitle = null }) => (
  <div className="text-center mb-16">
    <h2 className="text-5xl lg:text-6xl font-black mb-6">{children}</h2>
    {subtitle && <p className="text-xl text-gray-600 max-w-3xl mx-auto">{subtitle}</p>}
  </div>
);

const ModuleCard = ({ module, disabled = true }) => (
  <div className="bg-white/90 backdrop-blur-sm p-6 rounded-2xl border-2 border-yellow-200 hover:border-yellow-400 transition-all duration-300 shadow-lg hover:shadow-xl transform hover:scale-105">
    <div className="text-center mb-4">
      <div className="text-4xl mb-3">{module.icon}</div>
      <h3 className="text-lg font-bold text-gray-800 mb-2">{module.title}</h3>
      <p className="text-sm text-gray-600 mb-4">{module.description}</p>
    </div>
    
    <div className="space-y-2 mb-4">
      {module.features.map((feature, idx) => (
        <div key={idx} className="flex items-center gap-2 text-xs text-gray-600">
          <div className="w-1 h-1 bg-yellow-500 rounded-full"></div>
          <span>{feature}</span>
        </div>
      ))}
    </div>
    
    <button 
      className="w-full px-4 py-2 bg-gradient-to-r from-yellow-400 to-yellow-600 hover:from-yellow-500 hover:to-yellow-700 text-black font-bold rounded-xl transition-all duration-300 cursor-not-allowed"
      disabled={disabled}
    >
      {module.cta}
    </button>
  </div>
);

const ChatModulesGrid = () => (
  <div className="bg-gradient-to-r from-yellow-400 to-yellow-600 text-black p-8 rounded-3xl shadow-2xl">
    <h3 className="text-3xl font-black mb-4 text-center">💬 10 Módulos Customizados de Chat IA</h3>
    <p className="text-xl font-semibold mb-8 text-center">Sistema completo de inteligência artificial para toda comunidade escolar</p>
    <div className="grid md:grid-cols-5 gap-4">
      {CHAT_MODULES.map((module, index) => (
        <div key={index} className="text-center bg-white/20 p-4 rounded-xl">
          <div className="text-3xl mb-2">{module.icon}</div>
          <div className="font-bold text-sm">{module.name}</div>
          <div className="text-xs">{module.description}</div>
        </div>
      ))}
    </div>
  </div>
);

const TestimonialCard = ({ testimonial, index }) => (
  <div className="bg-white/10 backdrop-blur-sm p-8 rounded-2xl border border-white/20 hover:border-yellow-400 transition-all duration-300">
    <div className="flex mb-4">
      {[...Array(testimonial.rating)].map((_, i) => (
        <Star key={i} className="w-5 h-5 text-yellow-400 fill-current" />
      ))}
    </div>
    <blockquote className="text-lg mb-6 leading-relaxed">&ldquo;{testimonial.content}&rdquo;</blockquote>
    <footer>
      <div className="font-bold">{testimonial.name}</div>
      <div className="text-gray-300">{testimonial.role}</div>
    </footer>
  </div>
);

const CompetitorCard = ({ competitor, isSpecial = false }) => (
  <div className={`${isSpecial ? 'bg-gradient-to-br from-yellow-400 to-yellow-600 border-yellow-500' : 'bg-white border-gray-200'} border-2 rounded-2xl p-6 shadow-lg ${isSpecial ? 'relative shadow-2xl' : ''}`}>
    {isSpecial && (
      <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
        <span className="bg-yellow-500 text-black px-4 py-2 rounded-full text-sm font-bold">
          🏆 MELHOR ESCOLHA
        </span>
      </div>
    )}
    
    <div className={`text-center mb-6 ${isSpecial ? 'mt-4' : ''}`}>
      <div className="text-4xl mb-3">{competitor.icon}</div>
      <h3 className={`text-2xl font-bold mb-2 ${isSpecial ? 'text-black' : 'text-gray-800'}`}>{competitor.name}</h3>
      <div className={`text-3xl font-black mb-4 ${isSpecial ? 'text-black' : 'text-red-500'}`}>
        {competitor.price || "Preço Especial"}
      </div>
    </div>
    
    <div className="space-y-3">
      <h4 className={`font-bold mb-3 ${isSpecial ? 'text-black' : 'text-gray-700'}`}>
        {isSpecial ? '✅ Vantagens:' : '❌ Limitações:'}
      </h4>
      {(competitor.restrictions || ADVANTAGES.slice(0, 5)).map((item, idx) => (
        <div key={idx} className={`flex items-start gap-2 text-sm ${isSpecial ? 'text-black' : 'text-gray-600'}`}>
          <span className={`mt-1 ${isSpecial ? 'text-green-600' : 'text-red-500'}`}>•</span>
          <span>{item}</span>
        </div>
      ))}
    </div>
  </div>
);

interface FeatureCardProps {
  feature: Feature;
  index: number;
  className?: string;
  cardClassName?: string;
}

const FeatureCard: React.FC<FeatureCardProps> = ({ feature, index, className = '', cardClassName = '' }) => (
  <motion.div
    className={`bg-white p-6 rounded-2xl border-2 border-yellow-200 hover:border-yellow-400 transition-all duration-300 shadow-lg hover:shadow-xl ${cardClassName}`}
    initial={{ opacity: 0, y: 50 }}
    whileInView={{ opacity: 1, y: 0 }}
    transition={{ duration: 0.6, delay: index * 0.1, type: 'spring', stiffness: 100 }}
    viewport={{ once: true }}
    whileHover={{ scale: 1.05 }}
  >
    <div className="text-center mb-4">
      <div className="text-4xl mb-3">{feature.icon}</div>
      <h3 className="text-lg font-bold text-gray-800 mb-2">{feature.title}</h3>
      {feature.stats && (
        <div className="text-sm font-bold text-yellow-600 bg-yellow-100 px-3 py-1 rounded-full inline-block">
          {feature.stats}
        </div>
      )}
      <p className="text-sm text-gray-600 mb-4">{feature.description}</p>
    </div>
    {feature.features && (
      <div className="space-y-2 mb-4">
        {feature.features.map((item, idx) => (
          <div key={idx} className="flex items-center gap-2 text-xs text-gray-600">
            <CheckCircle className="w-4 h-4 text-green-500" />
            <span>{item}</span>
          </div>
        ))}
      </div>
    )}
    {feature.cta && (
      <button
        className="w-full px-4 py-2 bg-gradient-to-r from-yellow-400 to-yellow-600 hover:from-yellow-500 hover:to-yellow-700 text-black font-bold rounded-xl transition-all duration-300 cursor-not-allowed"
        disabled
        aria-label={feature.cta}
      >
        {feature.cta}
      </button>
    )}
  </motion.div>
);


interface AccordionItemProps {
  item: FAQItem;
  index: number;
  isOpen: boolean;
  toggleItem: (index: number) => void;
}

const AccordionItem: React.FC<AccordionItemProps> = ({ item, index, isOpen, toggleItem }) => (
  <div className="border border-gray-200 rounded-2xl overflow-hidden">
    <button
      className="w-full p-6 text-left hover:bg-yellow-50 transition-colors focus:outline-none focus:ring-2 focus:ring-yellow-400"
      onClick={() => toggleItem(index)}
      aria-expanded={isOpen}
      aria-controls={`faq-answer-${index}`}
    >
      <div className="flex items-center justify-between">
        <h3 className="text-xl font-bold text-gray-900">{item.question}</h3>
        <ChevronDown
          className={`w-5 h-5 text-gray-500 transform transition-transform ${isOpen ? 'rotate-180' : ''}`}
        />
      </div>
    </button>
    {isOpen && (
      <div id={`faq-answer-${index}`} className="px-6 pb-6" role="region" aria-labelledby={`faq-question-${index}`}>
        <p className="text-gray-700 leading-relaxed">{item.answer}</p>
      </div>
    )}
  </div>
);

const FAQ: React.FC = () => {
  const [openItems, setOpenItems] = useState(new Set<number>());

  const toggleItem = useCallback((index: number) => {
    setOpenItems((prev) => {
      const newSet = new Set(prev);
      if (newSet.has(index)) {
        newSet.delete(index);
      } else {
        newSet.add(index);
      }
      return newSet;
    });
  }, []);

  return (
    <section className="py-20 bg-white" aria-labelledby="faq-title">
      <div className="mx-auto max-w-[1200px] px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-16">
          <h2 id="faq-title" className="text-4xl lg:text-5xl font-bold mb-6">
            ❓ Perguntas <span className="text-yellow-500">Frequentes</span>
          </h2>
          <p className="text-xl text-gray-600">Tire suas principais dúvidas sobre o HubEdu.ia</p>
        </div>
        <div className="space-y-4">
          {content.faqItems.map((item, index) => (
            <AccordionItem key={index} item={item} index={index} isOpen={openItems.has(index)} toggleItem={toggleItem} />
          ))}
        </div>
      </div>
    </section>
  );
};

const HubEduLanding: React.FC = () => {
  const [scrollY, setScrollY] = useState(0);
  const [modalsState, setModalsState] = useState({
    privacy: false,
    terms: false,
    lgpd: false,
  });

  // Debounced scroll handler
  useEffect(() => {
    const handleScroll = debounce(() => setScrollY(window.scrollY), 10);
    window.addEventListener('scroll', handleScroll);
    return () => {
      window.removeEventListener('scroll', handleScroll);
      handleScroll.cancel();
    };
  }, []);

  const toggleModal = useCallback((modalType: keyof typeof modalsState) => {
    setModalsState((prev) => ({
      ...prev,
      [modalType]: !prev[modalType],
    }));
  }, []);

  const headerClasses = useMemo(
    () =>
    `fixed top-0 w-full z-50 transition-all duration-300 ${
      scrollY > 50 ? 'bg-white/95 backdrop-blur-md shadow-lg' : 'bg-white/90 backdrop-blur-sm'
    } border-b border-yellow-200`,
    [scrollY]
  );

  return (
    <div className="min-h-screen w-full overflow-x-hidden">
      {/* Modals */}
      <Suspense fallback={null}>
        {modalsState.privacy && <PrivacyPolicyModal isOpen={modalsState.privacy} onClose={() => toggleModal('privacy')} />}
        {modalsState.terms && <TermsOfUseModal isOpen={modalsState.terms} onClose={() => toggleModal('terms')} />}
        {modalsState.lgpd && <LGPDModal isOpen={modalsState.lgpd} onClose={() => toggleModal('lgpd')} />}
      </Suspense>

      {/* Banner */}
      <div className="bg-gradient-to-r from-yellow-400 to-orange-500 text-black text-center py-2 font-bold text-sm">
        🚀 EM BREVE - Lançamento oficial da plataforma HubEdu.ia
      </div>

      {/* Header */}
      <header className={headerClasses}>
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 flex justify-between items-center">
          <div className="flex items-center gap-2">
            <OptimizedImage
              src="/assets/Logo_HubEdu.ia.svg"
              alt="HubEdu.ia Logo"
              className="h-6 w-6 md:h-8 md:w-8"
              width={160}
              height={40}
            />
            <div className="text-base md:text-xl font-bold truncate">
              <span className="text-black">Hub</span>
              <span className="text-yellow-500">Edu</span>
              <span className="text-black">.ia</span>
            </div>
          </div>
          <button 
            disabled
            className="px-4 py-2 md:px-6 md:py-3 bg-gray-400 text-white font-bold rounded-xl shadow-lg flex items-center gap-2 text-sm md:text-base cursor-not-allowed"
            aria-label="Funcionalidade em breve"
          >
            <LogIn className="w-4 h-4" />
            EM BREVE
            <ArrowRight className="w-4 h-4" />
          </button>
        </div>
      </header>

      {/* Hero Section */}
      <section className="bg-gradient-to-br from-yellow-50 via-white to-yellow-100 text-black pt-32 pb-20 relative overflow-hidden">
        <div className="absolute inset-0 opacity-20">
          <motion.div
            className="absolute top-10 left-10 w-96 h-96 bg-gradient-to-r from-yellow-400 to-yellow-600 rounded-full blur-3xl"
            animate={{ scale: [1, 1.2, 1], opacity: [0.1, 0.3, 0.1], rotate: [0, 180, 360] }}
            transition={{ duration: 12, repeat: Infinity, ease: 'easeInOut' }}
          />
          <motion.div
            className="absolute bottom-10 right-10 w-80 h-80 bg-gradient-to-r from-yellow-500 to-yellow-700 rounded-full blur-3xl"
            animate={{ scale: [1.2, 1, 1.2], opacity: [0.2, 0.1, 0.2], rotate: [360, 180, 0] }}
            transition={{ duration: 15, repeat: Infinity, ease: 'easeInOut', delay: 3 }}
          />
        </div>
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
          <div className="text-center mb-16">
            <motion.div
              className="inline-flex items-center gap-2 bg-gradient-to-r from-yellow-400 to-yellow-600 text-black px-6 py-3 rounded-full text-sm font-bold mb-8 shadow-lg"
              initial={{ opacity: 0, y: -20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.2 }}
            >
              <Rocket className="w-5 h-5" />
              🚀 EM BREVE - A Educação do Futuro
            </motion.div>
            <motion.h1
              className="text-6xl lg:text-8xl font-black mb-8 leading-tight text-black"
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.4 }}
            >
              <span className="bg-gradient-to-r from-yellow-500 to-yellow-700 bg-clip-text text-transparent">
                {BRAND.name}
              </span>
              <br />
              <span className="text-4xl lg:text-6xl font-bold text-gray-800">
                {BRAND.tagline}
              </span>
            </motion.h1>
            <motion.p
              className="text-2xl lg:text-3xl mb-12 text-gray-700 leading-relaxed max-w-4xl mx-auto font-medium"
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.6 }}
            >
              {BRAND.description}
            </motion.p>
            {/* Modules Grid */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 mb-12">
              {content.hero.modules.map((module, index) => (
                <ModuleCard key={index} module={module} />
              ))}
            </div>
            <div className="flex flex-col sm:flex-row gap-6 justify-center">
              <button 
                className="group px-8 py-4 bg-gradient-to-r from-yellow-400 to-yellow-600 hover:from-yellow-500 hover:to-yellow-700 text-black font-bold text-lg rounded-xl shadow-lg flex items-center justify-center gap-2 cursor-not-allowed"
                disabled
                aria-label={content.hero.ctaPrimary}
              >
                <Play className="w-5 h-5 group-hover:scale-110 transition-transform" />
                {content.hero.ctaPrimary}
              </button>
              <button 
                className="px-8 py-4 border-2 border-yellow-400 hover:bg-yellow-400 hover:text-black text-yellow-600 font-bold text-lg rounded-xl flex items-center justify-center gap-2 cursor-not-allowed"
                disabled
                aria-label={content.hero.ctaSecondary}
              >
                <Phone className="w-5 h-5" />
                {content.hero.ctaSecondary}
                <ArrowRight className="w-5 h-5" />
              </button>
            </div>
          </div>
        </div>
      </section>

      {/* Lessons Section */}
      <section className="py-20 bg-gradient-to-br from-yellow-50 via-white to-yellow-100">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <SectionTitle subtitle="4 módulos principais + 10 módulos customizados de chat para transformar sua escola">
            🎮 <span className="bg-gradient-to-r from-yellow-500 to-yellow-700 bg-clip-text text-transparent">Veja Como Funciona</span>
          </SectionTitle>
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
            {content.lessonsSection.features.map((feature, index) => (
              <FeatureCard key={index} feature={feature} index={index} />
            ))}
          </div>
            <ChatModulesGrid />
        </div>
      </section>

      {/* Schools Section */}
      <section className="py-20 bg-gradient-to-b from-gray-900 to-black text-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <SectionTitle subtitle="Plataforma completa desenvolvida especificamente para atender as necessidades das instituições de ensino brasileiras">
            🏫 <span className="bg-gradient-to-r from-yellow-400 to-yellow-600 bg-clip-text text-transparent">Soluções para Escolas Brasileiras</span>
          </SectionTitle>
          <div className="grid md:grid-cols-3 gap-8">
            {content.schoolsSection.features.map((feature, index) => (
              <FeatureCard
                key={index}
                feature={feature}
                index={index}
                cardClassName="bg-gradient-to-br from-gray-800 to-gray-900 border-yellow-400 hover:border-yellow-300 text-white"
              />
            ))}
          </div>
        </div>
      </section>

      {/* ENEM Section */}
      <section className="py-20 bg-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <SectionTitle subtitle="A plataforma mais completa para estudantes brasileiros se prepararem para o Exame Nacional do Ensino Médio">
            🎓 <span className="bg-gradient-to-r from-yellow-500 to-yellow-700 bg-clip-text text-transparent">Preparação Completa para o ENEM</span>
          </SectionTitle>
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
            {content.enemSection.features.map((feature, index) => (
              <FeatureCard key={index} feature={feature} index={index} />
            ))}
          </div>
        </div>
      </section>

      {/* Testimonials Section */}
      <section className="py-20 bg-gradient-to-b from-gray-900 to-black text-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <SectionTitle>
            💬 O que dizem <span className="text-yellow-400">sobre nós</span>
          </SectionTitle>
          <div className="grid md:grid-cols-3 gap-8">
            {content.testimonials.map((testimonial, index) => (
              <TestimonialCard key={index} testimonial={testimonial} index={index} />
            ))}
          </div>
        </div>
      </section>

      {/* FAQ Section */}
      <FAQ />

      {/* Pricing Comparison Section */}
      <section className="py-20 bg-gradient-to-br from-yellow-50 via-white to-yellow-100">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <SectionTitle subtitle="Comparativo com as principais plataformas de IA">
            💰 <span className="bg-gradient-to-r from-yellow-500 to-yellow-700 bg-clip-text text-transparent">Por que Escolher HubEdu.ia?</span>
          </SectionTitle>
          <div className="grid md:grid-cols-3 gap-8 mb-12">
            {COMPETITORS.map((competitor, index) => (
              <CompetitorCard key={index} competitor={competitor} />
            ))}
            <CompetitorCard 
              competitor={{ name: "HubEdu.ia", icon: "🎓" }} 
              isSpecial={true} 
            />
          </div>
            <motion.div
              className="bg-gradient-to-br from-yellow-400 to-yellow-600 border-2 border-yellow-500 rounded-2xl p-6 shadow-2xl relative"
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.3 }}
              viewport={{ once: true }}
            >
              <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
                <span className="bg-yellow-500 text-black px-4 py-2 rounded-full text-sm font-bold">🏆 MELHOR ESCOLHA</span>
              </div>
              <div className="text-center mb-6 mt-4">
                <div className="text-4xl mb-3">🎓</div>
                <h3 className="text-2xl font-bold text-black mb-2">HubEdu.ia</h3>
                <div className="text-3xl font-black text-black mb-4">Preço Especial</div>
              </div>
              <div className="space-y-3">
                <h4 className="font-bold text-black mb-3">✅ Vantagens:</h4>
                {content.pricingComparison.advantages.map((advantage, idx) => (
                  <div key={idx} className="flex items-start gap-2 text-sm text-black">
                    <span className="text-green-600 mt-1">•</span>
                    <span>{advantage.replace('✅ ', '')}</span>
            </div>
                ))}
              </div>
            </motion.div>
          </div>
        </div>
      </section>

      {/* Final CTA Section */}
      <section className="bg-gradient-to-b from-neutral-950 to-neutral-900 text-white py-20 relative overflow-hidden">
        <div className="absolute inset-0 opacity-20">
          <div className="absolute top-1/4 left-1/4 w-96 h-96 bg-yellow-400 rounded-full blur-3xl animate-pulse"></div>
          <div
            className="absolute bottom-1/4 right-1/4 w-96 h-96 bg-yellow-400 rounded-full blur-3xl animate-pulse"
            style={{ animationDelay: '1s' }}
          ></div>
        </div>
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center relative z-10">
          <h2 className="text-4xl sm:text-5xl font-extrabold text-white mb-6">{content.finalCta.title}</h2>
          <p className="text-xl mb-8 text-gray-300 max-w-3xl mx-auto leading-relaxed">{content.finalCta.subtitle}</p>
          <div className="bg-gradient-to-r from-gray-800 to-gray-900 p-8 rounded-2xl mb-12 border border-gray-700">
            <h3 className="text-2xl font-bold mb-6 text-yellow-400">🎯 4 Módulos Principais:</h3>
            <div className="grid md:grid-cols-2 gap-6 mb-6">
              {content.finalCta.features.slice(0, 4).map((feature, index) => {
                const icons = ['🎮', '📚', '✍️', '💬'];
                const colors = ['from-blue-500 to-blue-600', 'from-green-500 to-green-600', 'from-purple-500 to-purple-600', 'from-yellow-500 to-yellow-600'];
                return (
                <div key={index} className="flex items-center gap-4 p-4 bg-gray-700/50 rounded-xl border border-gray-600">
                    <div className={`text-3xl p-3 rounded-xl bg-gradient-to-r ${colors[index]} text-white shadow-lg`}>
                      {icons[index]}
                  </div>
                  <div>
                      <div className="text-gray-300 font-bold text-lg">{feature.split(' - ')[0]}</div>
                      <div className="text-gray-400 text-sm">{feature.split(' - ')[1]}</div>
                  </div>
                </div>
                );
              })}
            </div>
            <div className="text-center">
              <div className="flex items-center justify-center gap-3 p-3 bg-gray-700/50 rounded-xl">
                <CheckCircle className="w-6 h-6 text-yellow-400 flex-shrink-0" />
                <span className="text-gray-300 font-medium">{content.finalCta.features[4]}</span>
              </div>
            </div>
          </div>
          <div className="flex flex-col sm:flex-row gap-6 justify-center">
            <button 
              className="group px-8 py-4 bg-gray-400 text-white font-bold text-lg rounded-xl shadow-lg flex items-center justify-center gap-2 cursor-not-allowed"
              disabled
              aria-label={content.finalCta.ctaPrimary}
            >
              <Play className="w-5 h-5 group-hover:scale-110 transition-transform" />
              {content.finalCta.ctaPrimary}
            </button>
            <button 
              className="px-8 py-4 border-2 border-gray-400 text-gray-400 font-semibold rounded-xl flex items-center justify-center gap-2 cursor-not-allowed"
              disabled
              aria-label={content.finalCta.ctaSecondary}
            >
              <MessageSquare className="w-5 h-5" />
              {content.finalCta.ctaSecondary}
            </button>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-gradient-to-b from-gray-900 to-black text-white py-16">
        <div className="mx-auto max-w-[1200px] px-4 sm:px-6 lg:px-8">
          <div className="grid lg:grid-cols-4 gap-12 mb-12">
            <div className="lg:col-span-2">
              <div className="flex items-center gap-3 mb-4">
                <OptimizedImage
                  src="/assets/Logo_HubEdu.ia.svg"
                  alt="HubEdu.ia"
                  className="w-12 h-12 object-contain"
                  width={48}
                  height={48}
                />
                <div className="text-3xl font-bold">
                  <span className="text-white">Hub</span>
                  <span className="text-yellow-400">Edu</span>
                  <span className="text-white">.ia</span>
                </div>
              </div>
              <p className="text-gray-400 mb-6 leading-relaxed">{content.contactInfo.name}</p>
              <div className="flex gap-4">
                <button 
                  className="px-6 py-3 bg-gray-400 text-white font-bold rounded-xl cursor-not-allowed"
                  disabled
                  aria-label="Em breve"
                >
                  EM BREVE
                </button>
                <button
                  className="px-6 py-3 rounded-xl bg-gray-600 text-white font-semibold cursor-not-allowed"
                  disabled
                  aria-label="Em breve"
                >
                  EM BREVE
                </button>
              </div>
            </div>
            <div>
              <h3 className="text-xl font-bold mb-6 text-yellow-400">Contato</h3>
              <div className="space-y-4">
                <div className="flex items-start gap-3">
                  <Globe className="w-5 h-5 text-yellow-400 mt-1 flex-shrink-0" />
                  <div>
                    <div className="font-semibold">Website</div>
                    <div className="text-gray-400">{content.contactInfo.website}</div>
                  </div>
                </div>
                <div className="flex items-start gap-3">
                  <Mail className="w-5 h-5 text-yellow-400 mt-1 flex-shrink-0" />
                  <div>
                    <div className="font-semibold">Email</div>
                    <a href={`mailto:${content.contactInfo.email}`} className="text-gray-400 hover:text-yellow-400 transition-colors">
                      {content.contactInfo.email}
                    </a>
                  </div>
                </div>
                <div className="flex items-start gap-3">
                  <Phone className="w-5 h-5 text-yellow-400 mt-1 flex-shrink-0" />
                  <div>
                    <div className="font-semibold">Telefone</div>
                    <a href={`tel:+5511999999999`} className="text-gray-400 hover:text-yellow-400 transition-colors">
                      {content.contactInfo.phone}
                    </a>
                  </div>
                </div>
                <div className="flex items-start gap-3">
                  <MapPin className="w-5 h-5 text-yellow-400 mt-1 flex-shrink-0" />
                  <div>
                    <div className="font-semibold">Localização</div>
                    <div className="text-gray-400">{content.contactInfo.location}</div>
                  </div>
                </div>
              </div>
            </div>
            <div>
              <h3 className="text-xl font-bold mb-6 text-yellow-400">Links</h3>
              <nav className="space-y-3">
                {content.contactInfo.links.map((link, index) => (
                  <a key={index} href="#" className="block text-gray-400 hover:text-yellow-400 transition-colors">
                    {link}
                  </a>
                ))}
              </nav>
            </div>
          </div>
          <div className="border-t border-gray-800 pt-8">
            <div className="flex flex-col md:flex-row justify-between items-center gap-4">
              <p className="text-gray-500 text-sm">© 2025 HubEdu.ia - Transformando a educação</p>
              <div className="flex gap-6 text-sm text-gray-500">
                <button
                  onClick={() => toggleModal('privacy')}
                  className="hover:text-yellow-400 transition-colors focus:outline-none focus:ring-2 focus:ring-yellow-400 rounded px-3 py-1 border border-gray-600 hover:border-yellow-400"
                >
                  Privacidade
                </button>
                <button
                  onClick={() => toggleModal('terms')}
                  className="hover:text-yellow-400 transition-colors focus:outline-none focus:ring-2 focus:ring-yellow-400 rounded px-3 py-1 border border-gray-600 hover:border-yellow-400"
                >
                  Termos
                </button>
                <button
                  onClick={() => toggleModal('lgpd')}
                  className="hover:text-yellow-400 transition-colors focus:outline-none focus:ring-2 focus:ring-yellow-400 rounded px-3 py-1 border border-gray-600 hover:border-yellow-400"
                >
                  LGPD
                </button>
              </div>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default HubEduLanding;