// lib/safety-middleware.ts
// Middleware de seguran√ßa para detectar e bloquear conte√∫do inadequado

import { detectInappropriateContent, createEducationalRefusalResponse, EDUCATIONAL_ALTERNATIVES } from './system-prompts/safety-guidelines';

export interface SafetyCheckResult {
  isInappropriate: boolean;
  inappropriateTopics: string[];
  suggestedResponse?: string;
  educationalAlternative?: string;
}

/**
 * Verifica se uma mensagem cont√©m conte√∫do inadequado
 */
export function checkMessageSafety(message: string): SafetyCheckResult {
  const inappropriateTopics: string[] = [];
  const lowerMessage = message.toLowerCase();
  
  // Lista de t√≥picos inadequados
  const inappropriateKeywords = [
    'drogas', '√°lcool', 'cigarros', 'tabaco', 'fumar', 'beber', 'subst√¢ncias ilegais',
    'viol√™ncia', 'armas', 'suic√≠dio', 'automutila√ß√£o', 'hacking', 'pirataria',
    'fraudes', 'atividades ilegais', 'conte√∫do sexual', 'pornografia',
    'jogos de azar', 'apostas', 'subst√¢ncias controladas', 'maconha', 'coca√≠na',
    'hero√≠na', 'crack', 'lsd', 'ecstasy', 'metanfetamina', 'bebida alco√≥lica',
    'cerveja', 'vodka', 'whisky', 'cacha√ßa', 'vinho', 'como fumar', 'como beber',
    'como usar drogas', 'como fazer drogas', 'como obter drogas',
    // T√≥picos adicionais detectados nos logs
    'sexo', 'como fazer sexo', 'bomba', 'como fazer uma bomba', 'explosivos',
    'armas de fogo', 'viol√™ncia dom√©stica', 'abuso', 'tortura', 'assassinato',
    'terrorismo', 'extremismo', 'nazismo', 'fascismo', 'racismo', 'xenofobia',
    'homofobia', 'transfobia', 'misoginia', 'pedofilia', 'incesto', 'zoofilia',
    'necrofilia', 'sadomasoquismo', 'bdsm', 'fetichismo', 'prostitui√ß√£o',
    'tr√°fico humano', 'escravid√£o', 'trabalho infantil', 'explora√ß√£o sexual',
    'pornografia infantil', 'sexting', 'revenge porn', 'cyberbullying',
    'suic√≠dio assistido', 'eutan√°sia', 'aborto', 'contracep√ß√£o', 'esteriliza√ß√£o',
    'clonagem humana', 'engenharia gen√©tica perigosa', 'armas biol√≥gicas',
    'armas qu√≠micas', 'armas nucleares', 'bombas caseiras', 'explosivos caseiros',
    'venenos', 'toxinas', 'subst√¢ncias t√≥xicas', 'drogas sint√©ticas',
    'designer drugs', 'smart drugs', 'drogas de festa', 'drogas recreativas',
    'overdose', 'depend√™ncia qu√≠mica', 'v√≠cio', 'abstin√™ncia', 's√≠ndrome de abstin√™ncia',
    'desintoxica√ß√£o', 'reabilita√ß√£o', 'centro de reabilita√ß√£o', 'cl√≠nica de reabilita√ß√£o',
    'tratamento de depend√™ncia', 'terapia de grupo', 'terapia individual',
    'psicoterapia', 'psiquiatria', 'medicamentos psiqui√°tricos', 'antidepressivos',
    'ansiol√≠ticos', 'sedativos', 'hipn√≥ticos', 'estimulantes', 'anfetaminas',
    'metilfenidato', 'ritalina', 'concerta', 'adderall', 'vyvanse', 'modafinil',
    'benzodiazep√≠nicos', 'diazepam', 'lorazepam', 'clonazepam', 'alprazolam',
    'opioides', 'morfina', 'code√≠na', 'fentanil', 'hero√≠na', 'metadona',
    'buprenorfina', 'naloxona', 'naltrexona', 'suboxone', 'subutex',
    'canabinoides', 'thc', 'cbd', 'maconha', 'haxixe', '√≥leo de haxixe',
    'cogumelos m√°gicos', 'psilocibina', 'lsd', 'dmt', 'ayahuasca', 'mescalina',
    'peyote', 'iboga√≠na', 'ketamina', 'ghb', 'rohypnol', 'flunitrazepam',
    'mdma', 'ecstasy', 'molly', 'cristal', 'ice', 'speed', 'coca√≠na',
    'crack', 'p√≥', 'merla', 'oxi', 'lan√ßa perfume', 'lol√≥', 'cheirinho',
    'col√≠rio', 'bala', 'doce', '√°cido', 'ch√°', 'erva', 'baseado', 'beck',
    'cigarro de maconha', 'vaporizador', 'bong', 'cachimbo', 'narguil√©',
    'hookah', 'shisha', 'tabaco', 'cigarro', 'charuto', 'cachimbo de tabaco',
    'rap√©', 'tabaco de mascar', 'snus', 'vape', 'cigarro eletr√¥nico',
    'e-cigarette', 'vaping', 'juul', 'pods', 'l√≠quido de vape', 'e-l√≠quido',
    'nicotina', 'alcatr√£o', 'mon√≥xido de carbono', 'fuma√ßa', 'fumar passivo',
    'c√¢ncer de pulm√£o', 'doen√ßa pulmonar', 'enfisema', 'bronquite cr√¥nica',
    'dpoc', 'doen√ßa pulmonar obstrutiva cr√¥nica', 'asma', 'alergia',
    'rea√ß√£o al√©rgica', 'choque anafil√°tico', 'edema', 'inflama√ß√£o',
    'infec√ß√£o', 'bact√©ria', 'v√≠rus', 'fungo', 'parasita', 'protozo√°rio',
    'helminto', 'verme', 'lombriga', 'solit√°ria', 't√™nia', 'esquistossomo',
    'mal√°ria', 'dengue', 'zika', 'chikungunya', 'febre amarela', 'covid-19',
    'sars-cov-2', 'coronav√≠rus', 'gripe', 'influenza', 'h1n1', 'h3n2',
    'tuberculose', 'hansen√≠ase', 'leishmaniose', 'doen√ßa de chagas',
    'toxoplasmose', 'giard√≠ase', 'ameb√≠ase', 'shigelose', 'salmonelose',
    'colera', 't√©tano', 'difteria', 'coqueluche', 'sarampo', 'rub√©ola',
    'caxumba', 'varicela', 'herpes', 'hpv', 'hiv', 'aids', 's√≠filis',
    'gonorreia', 'clam√≠dia', 'tricomon√≠ase', 'candid√≠ase', 'vaginose',
    'uretrite', 'cervicite', 'salpingite', 'endometrite', 'ooforite',
    'prostatite', 'epididimite', 'orquite', 'balanite', 'fimose',
    'parafimose', 'priapismo', 'ejacula√ß√£o precoce', 'disfun√ß√£o er√©til',
    'impot√™ncia', 'infertilidade', 'esterilidade', 'menopausa', 'andropausa',
    'climat√©rio', 'tpm', 's√≠ndrome pr√©-menstrual', 'dismenorreia',
    'amenorreia', 'menorragia', 'metrorragia', 'polimenorreia', 'oligomenorreia',
    'anovula√ß√£o', 'anovular', 'anovulat√≥rio', 'anovulat√≥rio', 'anovulat√≥rio',
    'anovulat√≥rio', 'anovulat√≥rio', 'anovulat√≥rio', 'anovulat√≥rio', 'anovulat√≥rio'
  ];
  
  // Detectar t√≥picos inadequados
  inappropriateKeywords.forEach(keyword => {
    if (lowerMessage.includes(keyword)) {
      inappropriateTopics.push(keyword);
    }
  });
  
  const isInappropriate = inappropriateTopics.length > 0;
  
  if (isInappropriate) {
    // Encontrar alternativa educacional
    let educationalAlternative: string | undefined;
    for (const [inappropriate, alternative] of Object.entries(EDUCATIONAL_ALTERNATIVES)) {
      if (inappropriateTopics.some(topic => topic.includes(inappropriate))) {
        educationalAlternative = alternative;
        break;
      }
    }
    
    // Se n√£o encontrar alternativa espec√≠fica, usar gen√©rica
    if (!educationalAlternative) {
      educationalAlternative = 'conte√∫dos educacionais apropriados e construtivos';
    }
    
    const suggestedResponse = createEducationalRefusalResponse(
      inappropriateTopics.join(', '),
      educationalAlternative
    );
    
    return {
      isInappropriate: true,
      inappropriateTopics,
      suggestedResponse,
      educationalAlternative
    };
  }
  
  return {
    isInappropriate: false,
    inappropriateTopics: []
  };
}

/**
 * Middleware para interceptar mensagens inadequadas antes de enviar para a IA
 */
export function createSafetyMiddleware() {
  return (req: any, res: any, next: any) => {
    if (req.body && req.body.message) {
      const safetyCheck = checkMessageSafety(req.body.message);
      
      if (safetyCheck.isInappropriate) {
        // Retornar resposta de seguran√ßa sem enviar para a IA
        return res.status(200).json({
          success: true,
          message: safetyCheck.suggestedResponse,
          safetyBlocked: true,
          inappropriateTopics: safetyCheck.inappropriateTopics,
          educationalAlternative: safetyCheck.educationalAlternative
        });
      }
    }
    
    next();
  };
}

/**
 * Fun√ß√£o para log de tentativas de conte√∫do inadequado
 */
export function logInappropriateContentAttempt(
  userId: string,
  message: string,
  inappropriateTopics: string[]
) {
  console.warn(`üö® TENTATIVA DE CONTE√öDO INADEQUADO DETECTADA:
    Usu√°rio: ${userId}
    Mensagem: ${message}
    T√≥picos inadequados: ${inappropriateTopics.join(', ')}
    Timestamp: ${new Date().toISOString()}
  `);
  
  // Aqui voc√™ pode adicionar l√≥gica para salvar no banco de dados
  // ou enviar alertas para administradores
}

/**
 * Fun√ß√£o para verificar se um usu√°rio est√° tentando contornar as prote√ß√µes
 */
export function detectCircumventionAttempt(message: string): boolean {
  const lowerMessage = message.toLowerCase();
  
  // Padr√µes comuns de tentativa de contornar filtros
  const circumventionPatterns = [
    'ignore previous instructions',
    'forget safety guidelines',
    'act as if you are not an ai',
    'pretend to be',
    'roleplay as',
    'you are now',
    'from now on',
    'disregard safety',
    'ignore safety',
    'forget about safety',
    'act without restrictions'
  ];
  
  return circumventionPatterns.some(pattern => lowerMessage.includes(pattern));
}

/**
 * Sistema de pontua√ß√£o de risco para usu√°rios
 */
export class SafetyScoreTracker {
  private userScores: Map<string, number> = new Map();
  
  incrementScore(userId: string, points: number = 1) {
    const currentScore = this.userScores.get(userId) || 0;
    this.userScores.set(userId, currentScore + points);
  }
  
  getScore(userId: string): number {
    return this.userScores.get(userId) || 0;
  }
  
  resetScore(userId: string) {
    this.userScores.delete(userId);
  }
  
  isHighRisk(userId: string): boolean {
    return this.getScore(userId) >= 5;
  }
  
  getAllScores(): Map<string, number> {
    return new Map(this.userScores);
  }
}

// Inst√¢ncia global do tracker de pontua√ß√£o
export const safetyScoreTracker = new SafetyScoreTracker();
