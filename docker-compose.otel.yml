version: '3.8'

services:
  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.88.0
    container_name: he-next-otel-collector
    command: ["--config=/etc/otelcol-contrib/otel-collector.yaml"]
    volumes:
      - ./collector/otel-collector.yaml:/etc/otelcol-contrib/otel-collector.yaml
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics
      - "8889:8889"   # Prometheus exporter metrics
    environment:
      - NEXT_APP_URL=http://host.docker.internal:3000
      - INTAKE_SECRET=dev-secret-change-in-production
    networks:
      - otel-network
    restart: unless-stopped

  # Jaeger (opcional - para visualização de traces)
  jaeger:
    image: jaegertracing/all-in-one:1.50
    container_name: he-next-jaeger
    ports:
      - "16686:16686"  # Jaeger UI
      - "14250:14250"  # Jaeger gRPC
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - otel-network
    restart: unless-stopped

  # Prometheus (opcional - para métricas)
  prometheus:
    image: prom/prometheus:latest
    container_name: he-next-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - otel-network
    restart: unless-stopped

networks:
  otel-network:
    driver: bridge